{"version":3,"file":"module.js","sources":["node_modules/rambda/src/keys.js","src/utils.ts","src/crc.ts","src/tables.ts","src/model.ts","src/business_card_creature.ts","src/index.ts"],"sourcesContent":["export function keys(x){\n  return Object.keys(x)\n}\n","function fnProperty(fn: (x: number, y: number) => number, base: number, prop: string, objs): number {\n  return Math.ceil(objs.map((o) => o[prop]).reduce(fn, base))\n}\n\nexport function mulp(prop: string, ...objs) {\n  return fnProperty((a, b) => a * b, 1, prop, objs)\n}\n\nexport function sump(prop: string, ...objs): number {\n  return fnProperty((a, b) => a + b, 0, prop, objs)\n}\n\nexport function subp(prop: string, ...objs): number {\n  return fnProperty((a, b) => a - b, 0, prop, objs)\n}\n\nexport function sum(...stats: Array<number>): number {\n  return stats.reduce((a, b) => a + b, 0)\n}\n\nfunction rnd(i: number) {\n  return Math.floor(Math.random() * i) + 1\n}\nexport const dices = {\n  dx(i) {\n    return rnd(i)\n  },\n  d8() {\n    return rnd(8)\n  },\n  d12() {\n    return rnd(20)\n  },\n  d20() {\n    return rnd(20)\n  },\n  d100() {\n    return rnd(100)\n  }\n}\n","const crcTable = [\n  0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5,\n  0x60c6, 0x70e7, 0x8108, 0x9129, 0xa14a, 0xb16b,\n  0xc18c, 0xd1ad, 0xe1ce, 0xf1ef, 0x1231, 0x0210,\n  0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6,\n  0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c,\n  0xf3ff, 0xe3de, 0x2462, 0x3443, 0x0420, 0x1401,\n  0x64e6, 0x74c7, 0x44a4, 0x5485, 0xa56a, 0xb54b,\n  0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d,\n  0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6,\n  0x5695, 0x46b4, 0xb75b, 0xa77a, 0x9719, 0x8738,\n  0xf7df, 0xe7fe, 0xd79d, 0xc7bc, 0x48c4, 0x58e5,\n  0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,\n  0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969,\n  0xa90a, 0xb92b, 0x5af5, 0x4ad4, 0x7ab7, 0x6a96,\n  0x1a71, 0x0a50, 0x3a33, 0x2a12, 0xdbfd, 0xcbdc,\n  0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a,\n  0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03,\n  0x0c60, 0x1c41, 0xedae, 0xfd8f, 0xcdec, 0xddcd,\n  0xad2a, 0xbd0b, 0x8d68, 0x9d49, 0x7e97, 0x6eb6,\n  0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70,\n  0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a,\n  0x9f59, 0x8f78, 0x9188, 0x81a9, 0xb1ca, 0xa1eb,\n  0xd10c, 0xc12d, 0xf14e, 0xe16f, 0x1080, 0x00a1,\n  0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,\n  0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c,\n  0xe37f, 0xf35e, 0x02b1, 0x1290, 0x22f3, 0x32d2,\n  0x4235, 0x5214, 0x6277, 0x7256, 0xb5ea, 0xa5cb,\n  0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d,\n  0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447,\n  0x5424, 0x4405, 0xa7db, 0xb7fa, 0x8799, 0x97b8,\n  0xe75f, 0xf77e, 0xc71d, 0xd73c, 0x26d3, 0x36f2,\n  0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634,\n  0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9,\n  0xb98a, 0xa9ab, 0x5844, 0x4865, 0x7806, 0x6827,\n  0x18c0, 0x08e1, 0x3882, 0x28a3, 0xcb7d, 0xdb5c,\n  0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,\n  0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0,\n  0x2ab3, 0x3a92, 0xfd2e, 0xed0f, 0xdd6c, 0xcd4d,\n  0xbdaa, 0xad8b, 0x9de8, 0x8dc9, 0x7c26, 0x6c07,\n  0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1,\n  0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba,\n  0x8fd9, 0x9ff8, 0x6e17, 0x7e36, 0x4e55, 0x5e74,\n  0x2e93, 0x3eb2, 0x0ed1, 0x1ef0];\n\n\nexport function crc16(s: string): string {\n  let crc = 0xFFFF;\n  let j: number\n\n  for (let i = 0; i < s.length; i++) {\n    let c = s.charCodeAt(i);\n    if (c > 255) {\n      throw new RangeError();\n    }\n    j = (c ^ (crc >> 8)) & 0xFF;\n    crc = crcTable[j] ^ (crc << 8)\n  }\n\n  return ((crc ^ 0) & 0xFFFF).toString(16)\n}\n","import { keys } from \"rambda\"\n\n\nexport type Dies = keyof typeof dies_avg\nexport type Modifier = keyof typeof modifiers\nexport type DamageType = typeof levels[number]\nexport type Stat = \"str\" | \"dex\" | \"con\" | \"int\" | \"wis\" | \"cha\"\nexport type Role = keyof typeof roles\nexport type Roles = typeof roles\nexport type SimpleMonster = typeof levels[number]\n\nexport const levels = [\n  {\n    level: -5,\n    armor_class: 11,\n    hit_points: 1,\n    attack_bonus: -1,\n    damage_per_action: 1,\n    spell_dc: [8, 5],\n    perception: 0,\n    proficiency_bonus: 0,\n    saving_throws: [1, 0, -1],\n    ability_modifiers: [1, 0, 0, 0, 0, -1],\n    experience: 0,\n  },\n  {\n    level: -4,\n    armor_class: 12,\n    hit_points: 1,\n    attack_bonus: 0,\n    damage_per_action: 1,\n    spell_dc: [9, 6],\n    perception: 1,\n    proficiency_bonus: 0,\n    saving_throws: [2, 1, -1],\n    ability_modifiers: [2, 1, 1, 0, 0, -1],\n    experience: 0,\n  },\n  {\n    level: -3,\n    armor_class: 13,\n    hit_points: 4,\n    attack_bonus: 1,\n    damage_per_action: 1,\n    spell_dc: [10, 7],\n    perception: 1,\n    proficiency_bonus: 1,\n    saving_throws: [3, 1, 0],\n    ability_modifiers: [2, 1, 1, 0, 0, -1],\n    experience: 2,\n  },\n  {\n    level: -2,\n    armor_class: 13,\n    hit_points: 8,\n    attack_bonus: 1,\n    damage_per_action: 1,\n    spell_dc: [10, 7],\n    perception: 1,\n    proficiency_bonus: 1,\n    saving_throws: [3, 1, 0],\n    ability_modifiers: [2, 1, 1, 0, 0, -1],\n    experience: 6,\n  },\n  {\n    level: -1,\n    armor_class: 13,\n    hit_points: 12,\n    attack_bonus: 1,\n    damage_per_action: 1,\n    spell_dc: [10, 7],\n    perception: 1,\n    proficiency_bonus: 1,\n    saving_throws: [3, 1, 0],\n    ability_modifiers: [2, 1, 1, 0, 0, -1],\n    experience: 12,\n  },\n  {\n    level: 0,\n    armor_class: 14,\n    hit_points: 16,\n    attack_bonus: 2,\n    damage_per_action: 1,\n    spell_dc: [10, 7],\n    perception: 1,\n    proficiency_bonus: 1,\n    saving_throws: [4, 2, 0],\n    ability_modifiers: [3, 2, 1, 1, 0, -1],\n    experience: 25,\n  },\n  {\n    level: 1,\n    armor_class: 14,\n    hit_points: 26,\n    attack_bonus: 3,\n    damage_per_action: 2,\n    spell_dc: [11, 8],\n    perception: 1,\n    proficiency_bonus: 2,\n    saving_throws: [5, 3, 0],\n    ability_modifiers: [3, 2, 1, 1, 0, -1],\n    experience: 50,\n  },\n  {\n    level: 2,\n    armor_class: 14,\n    hit_points: 30,\n    attack_bonus: 3,\n    damage_per_action: 4,\n    spell_dc: [11, 8],\n    perception: 1,\n    proficiency_bonus: 2,\n    saving_throws: [5, 3, 0],\n    ability_modifiers: [3, 2, 1, 1, 0, -1],\n    experience: 112,\n  },\n  {\n    level: 3,\n    armor_class: 14,\n    hit_points: 33,\n    attack_bonus: 3,\n    damage_per_action: 5,\n    spell_dc: [11, 8],\n    perception: 1,\n    proficiency_bonus: 2,\n    saving_throws: [5, 3, 0],\n    ability_modifiers: [3, 2, 1, 1, 0, -1],\n    experience: 175,\n  },\n  {\n    level: 4,\n    armor_class: 15,\n    hit_points: 36,\n    attack_bonus: 4,\n    damage_per_action: 8,\n    spell_dc: [12, 9],\n    perception: 2,\n    proficiency_bonus: 2,\n    saving_throws: [6, 3, 1],\n    ability_modifiers: [4, 3, 2, 1, 1, 0],\n    experience: 275,\n  },\n  {\n    level: 5,\n    armor_class: 16,\n    hit_points: 60,\n    attack_bonus: 5,\n    damage_per_action: 10,\n    spell_dc: [13, 10],\n    perception: 2,\n    proficiency_bonus: 3,\n    saving_throws: [7, 4, 1],\n    ability_modifiers: [4, 3, 2, 1, 1, 0],\n    experience: 450,\n  },\n  {\n    level: 6,\n    armor_class: 16,\n    hit_points: 64,\n    attack_bonus: 5,\n    damage_per_action: 11,\n    spell_dc: [13, 10],\n    perception: 2,\n    proficiency_bonus: 3,\n    saving_throws: [7, 4, 1],\n    ability_modifiers: [4, 3, 2, 1, 1, 0],\n    experience: 575,\n  },\n  {\n    level: 7,\n    armor_class: 16,\n    hit_points: 68,\n    attack_bonus: 5,\n    damage_per_action: 13,\n    spell_dc: [13, 10],\n    perception: 2,\n    proficiency_bonus: 3,\n    saving_throws: [7, 4, 1],\n    ability_modifiers: [4, 3, 2, 1, 1, 0],\n    experience: 725,\n  },\n  {\n    level: 8,\n    armor_class: 17,\n    hit_points: 72,\n    attack_bonus: 6,\n    damage_per_action: 17,\n    spell_dc: [14, 11],\n    perception: 3,\n    proficiency_bonus: 3,\n    saving_throws: [8, 5, 1],\n    ability_modifiers: [5, 3, 2, 2, 1, 0],\n    experience: 975,\n  },\n  {\n    level: 9,\n    armor_class: 18,\n    hit_points: 102,\n    attack_bonus: 7,\n    damage_per_action: 19,\n    spell_dc: [15, 12],\n    perception: 3,\n    proficiency_bonus: 4,\n    saving_throws: [9, 5, 2],\n    ability_modifiers: [5, 3, 2, 2, 1, 0],\n    experience: 1250,\n  },\n  {\n    level: 10,\n    armor_class: 18,\n    hit_points: 107,\n    attack_bonus: 7,\n    damage_per_action: 21,\n    spell_dc: [15, 12],\n    perception: 3,\n    proficiency_bonus: 4,\n    saving_throws: [9, 5, 2],\n    ability_modifiers: [5, 3, 2, 2, 1, 0],\n    experience: 1475,\n  },\n  {\n    level: 11,\n    armor_class: 18,\n    hit_points: 111,\n    attack_bonus: 7,\n    damage_per_action: 23,\n    spell_dc: [15, 12],\n    perception: 3,\n    proficiency_bonus: 4,\n    saving_throws: [9, 5, 2],\n    ability_modifiers: [5, 3, 2, 2, 1, 0],\n    experience: 1800,\n  },\n  {\n    level: 12,\n    armor_class: 18,\n    hit_points: 115,\n    attack_bonus: 8,\n    damage_per_action: 28,\n    spell_dc: [15, 12],\n    perception: 3,\n    proficiency_bonus: 4,\n    saving_throws: [10, 6, 2],\n    ability_modifiers: [6, 4, 3, 2, 1, 0],\n    experience: 2100,\n  },\n  {\n    level: 13,\n    armor_class: 19,\n    hit_points: 152,\n    attack_bonus: 9,\n    damage_per_action: 30,\n    spell_dc: [16, 13],\n    perception: 3,\n    proficiency_bonus: 5,\n    saving_throws: [11, 7, 2],\n    ability_modifiers: [6, 4, 3, 2, 1, 0],\n    experience: 2500,\n  },\n  {\n    level: 14,\n    armor_class: 19,\n    hit_points: 157,\n    attack_bonus: 9,\n    damage_per_action: 32,\n    spell_dc: [16, 13],\n    perception: 3,\n    proficiency_bonus: 5,\n    saving_throws: [11, 7, 2],\n    ability_modifiers: [6, 4, 3, 2, 1, 0],\n    experience: 2875,\n  },\n  {\n    level: 15,\n    armor_class: 19,\n    hit_points: 162,\n    attack_bonus: 9,\n    damage_per_action: 35,\n    spell_dc: [16, 13],\n    perception: 3,\n    proficiency_bonus: 5,\n    saving_throws: [11, 7, 2],\n    ability_modifiers: [6, 4, 3, 2, 1, 0],\n    experience: 3250,\n  },\n  {\n    level: 16,\n    armor_class: 20,\n    hit_points: 167,\n    attack_bonus: 10,\n    damage_per_action: 41,\n    spell_dc: [17, 14],\n    perception: 4,\n    proficiency_bonus: 5,\n    saving_throws: [12, 7, 3],\n    ability_modifiers: [7, 5, 3, 2, 2, 1],\n    experience: 3750,\n  },\n  {\n    level: 17,\n    armor_class: 21,\n    hit_points: 210,\n    attack_bonus: 11,\n    damage_per_action: 43,\n    spell_dc: [18, 15],\n    perception: 4,\n    proficiency_bonus: 6,\n    saving_throws: [13, 8, 3],\n    ability_modifiers: [7, 5, 3, 2, 2, 1],\n    experience: 4500,\n  },\n  {\n    level: 18,\n    armor_class: 21,\n    hit_points: 216,\n    attack_bonus: 11,\n    damage_per_action: 46,\n    spell_dc: [18, 15],\n    perception: 4,\n    proficiency_bonus: 6,\n    saving_throws: [13, 8, 3],\n    ability_modifiers: [7, 5, 3, 2, 2, 1],\n    experience: 5000,\n  },\n  {\n    level: 19,\n    armor_class: 21,\n    hit_points: 221,\n    attack_bonus: 11,\n    damage_per_action: 48,\n    spell_dc: [18, 15],\n    perception: 4,\n    proficiency_bonus: 6,\n    saving_throws: [13, 8, 3],\n    ability_modifiers: [7, 5, 3, 2, 2, 1],\n    experience: 5500,\n  },\n  {\n    level: 20,\n    armor_class: 22,\n    hit_points: 226,\n    attack_bonus: 12,\n    damage_per_action: 51,\n    spell_dc: [19, 16],\n    perception: 5,\n    proficiency_bonus: 6,\n    saving_throws: [14, 9, 3],\n    ability_modifiers: [8, 6, 4, 3, 2, 1],\n    experience: 6250,\n  },\n  {\n    level: 21,\n    armor_class: 22,\n    hit_points: 276,\n    attack_bonus: 13,\n    damage_per_action: 53,\n    spell_dc: [20, 17],\n    perception: 5,\n    proficiency_bonus: 7,\n    saving_throws: [15, 9, 4],\n    ability_modifiers: [8, 6, 4, 3, 2, 1],\n    experience: 8250,\n  },\n  {\n    level: 22,\n    armor_class: 22,\n    hit_points: 282,\n    attack_bonus: 13,\n    damage_per_action: 56,\n    spell_dc: [20, 17],\n    perception: 5,\n    proficiency_bonus: 7,\n    saving_throws: [15, 9, 4],\n    ability_modifiers: [8, 6, 4, 3, 2, 1],\n    experience: 10250,\n  },\n  {\n    level: 23,\n    armor_class: 22,\n    hit_points: 288,\n    attack_bonus: 13,\n    damage_per_action: 58,\n    spell_dc: [20, 17],\n    perception: 5,\n    proficiency_bonus: 7,\n    saving_throws: [15, 9, 4],\n    ability_modifiers: [8, 6, 4, 3, 2, 1],\n    experience: 12500,\n  },\n  {\n    level: 24,\n    armor_class: 23,\n    hit_points: 294,\n    attack_bonus: 14,\n    damage_per_action: 61,\n    spell_dc: [20, 17],\n    perception: 5,\n    proficiency_bonus: 7,\n    saving_throws: [16, 10, 4],\n    ability_modifiers: [9, 6, 4, 3, 2, 1],\n    experience: 15500,\n  },\n  {\n    level: 25,\n    armor_class: 24,\n    hit_points: 350,\n    attack_bonus: 15,\n    damage_per_action: 63,\n    spell_dc: [21, 18],\n    perception: 5,\n    proficiency_bonus: 8,\n    saving_throws: [17, 11, 4],\n    ability_modifiers: [9, 6, 4, 3, 2, 1],\n    experience: 18750,\n  },\n  {\n    level: 26,\n    armor_class: 24,\n    hit_points: 357,\n    attack_bonus: 15,\n    damage_per_action: 66,\n    spell_dc: [21, 18],\n    perception: 5,\n    proficiency_bonus: 8,\n    saving_throws: [17, 11, 4],\n    ability_modifiers: [9, 6, 4, 3, 2, 1],\n    experience: 22500,\n  },\n  {\n    level: 27,\n    armor_class: 24,\n    hit_points: 363,\n    attack_bonus: 15,\n    damage_per_action: 68,\n    spell_dc: [21, 18],\n    perception: 5,\n    proficiency_bonus: 8,\n    saving_throws: [17, 11, 4],\n    ability_modifiers: [9, 6, 4, 3, 2, 1],\n    experience: 26250,\n  },\n  {\n    level: 28,\n    armor_class: 25,\n    hit_points: 369,\n    attack_bonus: 16,\n    damage_per_action: 71,\n    spell_dc: [22, 19],\n    perception: 6,\n    proficiency_bonus: 8,\n    saving_throws: [18, 11, 5],\n    ability_modifiers: [10, 7, 5, 4, 3, 2],\n    experience: 30000,\n  },\n  {\n    level: 29,\n    armor_class: 26,\n    hit_points: 432,\n    attack_bonus: 17,\n    damage_per_action: 73,\n    spell_dc: [23, 20],\n    perception: 6,\n    proficiency_bonus: 9,\n    saving_throws: [19, 12, 5],\n    ability_modifiers: [10, 7, 5, 4, 3, 2],\n    experience: 33750,\n  },\n  {\n    level: 30,\n    armor_class: 26,\n    hit_points: 439,\n    attack_bonus: 17,\n    damage_per_action: 76,\n    spell_dc: [23, 20],\n    perception: 6,\n    proficiency_bonus: 9,\n    saving_throws: [19, 12, 5],\n    ability_modifiers: [10, 7, 5, 4, 3, 2],\n    experience: 38750,\n  },\n  {\n    level: 31,\n    armor_class: 26,\n    hit_points: 446,\n    attack_bonus: 17,\n    damage_per_action: 78,\n    spell_dc: [23, 20],\n    perception: 6,\n    proficiency_bonus: 9,\n    saving_throws: [19, 12, 5],\n    ability_modifiers: [10, 7, 5, 4, 3, 2],\n    experience: 44500,\n  },\n  {\n    level: 32,\n    armor_class: 26,\n    hit_points: 453,\n    attack_bonus: 18,\n    damage_per_action: 81,\n    spell_dc: [24, 21],\n    perception: 7,\n    proficiency_bonus: 9,\n    saving_throws: [20, 13, 5],\n    ability_modifiers: [11, 8, 5, 4, 3, 2],\n    experience: 51000,\n  },\n  {\n    level: 33,\n    armor_class: 27,\n    hit_points: 522,\n    attack_bonus: 19,\n    damage_per_action: 83,\n    spell_dc: [25, 22],\n    perception: 7,\n    proficiency_bonus: 10,\n    saving_throws: [21, 13, 6],\n    ability_modifiers: [11, 8, 5, 4, 3, 2],\n    experience: 58000,\n  },\n  {\n    level: 34,\n    armor_class: 27,\n    hit_points: 530,\n    attack_bonus: 19,\n    damage_per_action: 86,\n    spell_dc: [25, 22],\n    perception: 7,\n    proficiency_bonus: 10,\n    saving_throws: [21, 13, 6],\n    ability_modifiers: [11, 8, 5, 4, 3, 2],\n    experience: 67750,\n  },\n  {\n    level: 35,\n    armor_class: 27,\n    hit_points: 537,\n    attack_bonus: 19,\n    damage_per_action: 88,\n    spell_dc: [25, 22],\n    perception: 7,\n    proficiency_bonus: 10,\n    saving_throws: [21, 13, 6],\n    ability_modifiers: [11, 8, 5, 4, 3, 2],\n    experience: 77750,\n  },\n] as const\n\nexport const roles = {\n  brute: {\n    armor_class: 4,\n    hit_points: 1.2,\n    attack_bonus: 0,\n    damage_per_action: 1,\n    saving_throws: -2,\n    spell_dc: 0,\n    initiative: -2,\n    perception: -2,\n    speed: -10,\n    stat_priorities: [\"con\", \"str\", \"dex\", \"wis\", \"cha\", \"int\"],\n  },\n  magical_striker: {\n    armor_class: -4,\n    hit_points: 0.6,\n    attack_bonus: 4,\n    damage_per_action: 1.25,\n    saving_throws: -2,\n    spell_dc: 2,\n    initiative: 0,\n    perception: 0,\n    speed: -5,\n    stat_priorities: [\"int\", \"wis\", \"cha\", \"dex\", \"con\", \"str\"],\n  },\n  skill_paragon: {\n    armor_class: -2,\n    hit_points: 1,\n    attack_bonus: 2,\n    damage_per_action: 1,\n    saving_throws: 2,\n    spell_dc: 0,\n    initiative: 2,\n    perception: 2,\n    speed: 0,\n    stat_priorities: [\"str\", \"dex\", \"con\", \"wis\", \"int\", \"cha\"],\n  },\n  skirmisher: {\n    armor_class: -4,\n    hit_points: 0.5,\n    attack_bonus: 2,\n    damage_per_action: 1.5,\n    saving_throws: -2,\n    spell_dc: 0,\n    initiative: 1,\n    perception: 2,\n    speed: 5,\n    stat_priorities: [\"dex\", \"wis\", \"str\", \"con\", \"int\", \"cha\"],\n  },\n  sniper: {\n    armor_class: 0,\n    hit_points: 0.75,\n    attack_bonus: 0,\n    damage_per_action: 1.25,\n    saving_throws: 0,\n    spell_dc: 0,\n    initiative: 0,\n    perception: 2,\n    speed: -10,\n    stat_priorities: [\"dex\", \"wis\", \"str\", \"int\", \"cha\", \"con\"],\n  },\n  soldier: {\n    armor_class: 0,\n    hit_points: 1,\n    attack_bonus: 0,\n    damage_per_action: 1,\n    saving_throws: 0,\n    spell_dc: 0,\n    initiative: 0,\n    perception: 0,\n    speed: 0,\n    stat_priorities: [\"str\", \"dex\", \"con\", \"wis\", \"cha\", \"int\"],\n  },\n  spellcaster: {\n    armor_class: -4,\n    hit_points: 0.75,\n    attack_bonus: 0,\n    damage_per_action: 0.75,\n    saving_throws: -1,\n    spell_dc: 2,\n    initiative: -1,\n    perception: 1,\n    speed: -5,\n    stat_priorities: [\"int\", \"wis\", \"cha\", \"con\", \"dex\", \"str\"],\n  },\n} as const\n\n\nexport const modifiers = {\n  normal: {\n    armor_class: 0,\n    attack_bonus: 0,\n    hit_points: 1,\n    damage_per_action: 1,\n    saving_throws: 0,\n    spell_dc: 0,\n    initiative: 0,\n    perception: 0,\n    stealth: 0,\n    experience: 1,\n    special: [],\n  },\n  minion: {\n    armor_class: -2,\n    attack_bonus: -2,\n    hit_points: 0.2,\n    damage_per_action: 0.75,\n    saving_throws: -2,\n    spell_dc: -2,\n    initiative: -2,\n    perception: -2,\n    stealth: -2,\n    experience: 0.25,\n    special: [],\n  },\n  elite: {\n    armor_class: 2,\n    attack_bonus: 2,\n    hit_points: 2,\n    damage_per_action: 1.2,\n    saving_throws: 2,\n    spell_dc: 2,\n    initiative: 2,\n    perception: 2,\n    stealth: 2,\n    experience: 2,\n    special: [\"paragon\"],\n  },\n  solo: {\n    armor_class: 2,\n    attack_bonus: 2,\n    hit_points: 4,\n    damage_per_action: 1.2,\n    saving_throws: 2,\n    spell_dc: 2,\n    initiative: 4,\n    perception: 4,\n    stealth: 4,\n    experience: 4,\n    special: [\"paragon\", \"phase_66\", \"phase_33\"],\n  },\n} as const\n\nexport const HitDies = {\n  small: \"d4\",\n  medium: \"d6\",\n  large: \"d8\",\n  huge: \"d10\",\n  gargantuan: \"d20\",\n} as const\n\nexport const sizes = keys(HitDies)\n\nexport const dies_avg = {\n  d2: 1,\n  d3: 1.5,\n  d4: 2.5,\n  d6: 3.5,\n  d8: 4.5,\n  d10: 5.5,\n  d12: 6.5,\n  d20: 10.5,\n} as const\n\nexport const dies = keys(dies_avg)\n\nexport const dies_max = dies.map((i) => i.replace(/[^\\d]/, \"\")).map(parseInt)\n\nexport const cr_exp = [\n  { cr: \"0\", exp: 10 },\n  { cr: \"1/8\", exp: 25 },\n  { cr: \"1/4\", exp: 50 },\n  { cr: \"1/2\", exp: 100 },\n  { cr: \"1\", exp: 200 },\n  { cr: \"2\", exp: 450 },\n  { cr: \"3\", exp: 700 },\n  { cr: \"4\", exp: 1100 },\n  { cr: \"5\", exp: 1800 },\n  { cr: \"6\", exp: 2300 },\n  { cr: \"7\", exp: 2900 },\n  { cr: \"8\", exp: 3900 },\n  { cr: \"9\", exp: 5000 },\n  { cr: \"10\", exp: 5900 },\n  { cr: \"11\", exp: 7200 },\n  { cr: \"12\", exp: 8400 },\n  { cr: \"13\", exp: 10000 },\n  { cr: \"14\", exp: 11500 },\n  { cr: \"15\", exp: 13000 },\n  { cr: \"16\", exp: 15000 },\n  { cr: \"17\", exp: 18000 },\n  { cr: \"18\", exp: 20000 },\n  { cr: \"19\", exp: 22000 },\n  { cr: \"20\", exp: 25000 },\n  { cr: \"21\", exp: 33000 },\n  { cr: \"22\", exp: 41000 },\n  { cr: \"23\", exp: 50000 },\n  { cr: \"24\", exp: 62000 },\n  { cr: \"25\", exp: 75000 },\n  { cr: \"26\", exp: 90000 },\n  { cr: \"27\", exp: 105000 },\n  { cr: \"28\", exp: 120000 },\n  { cr: \"29\", exp: 135000 },\n  { cr: \"30\", exp: 155000 },\n] as const\n\n// https://www.5esrd.com/languages/\nexport const languages = [\n  \"common\",\n  \"dwarvish\",\n  \"elvish\",\n  \"giant\",\n  \"gnomish\",\n  \"goblin\",\n  \"halfling\",\n  \"orc\",\n  \"abyssal\",\n  \"celestial\",\n  \"draconic\",\n  \"deep speech\",\n  \"infernal\",\n  \"primordial\",\n  \"sylvan\",\n  \"undercommon\",\n] as const\n\n// https://www.5esrd.com/gamemastering/monsters-foes/#Senses\nexport const special_senses = [\n  \"blindsight\",\n  \"darkvision\",\n  \"tremorsense\",\n  \"truesight\",\n] as const\n\nexport const categories = [\n  \"aberration\",\n  \"beast\",\n  \"celestial\",\n  \"construct\",\n  \"dragon\",\n  \"elemental\",\n  \"fey\",\n  \"fiend\",\n  \"fiend (demon)\",\n  \"fiend (devil)\",\n  \"giant\",\n  \"humanoid\",\n  \"monstrosity\",\n  \"ooze\",\n  \"plant\",\n  \"undead\",\n] as const\n\nexport const alignments = [\n  \"lawful\",\n  \"lawful good\",\n  \"lawful evil\",\n  \"neutral\",\n  \"neutral good\",\n  \"neutral evil\",\n  \"chaotic\",\n  \"chaotic good\",\n  \"chaotic evil\",\n  \"unaligned\",\n] as const\n\nexport const conditions = [\n  \"blinded\",\n  \"charmed\",\n  \"deafened\",\n  \"exhaustion\",\n  \"frightened\",\n  \"grappled\",\n  \"incapacitated\",\n  \"invisible\",\n  \"paralyzed\",\n  \"petrified\",\n  \"poisoned\",\n  \"prone\",\n  \"restrained\",\n  \"stunned\",\n  \"unconscious\",\n] as const\n\n// https://www.5esrd.com/gamemastering/combat#Damage_Types\nexport const damage_types = [\n  \"cold\",\n  \"fire\",\n  \"force\",\n  \"lightning\",\n  \"necrotic\",\n  \"poison\",\n  \"psychic\",\n  \"radiant\",\n  \"thunder\",\n  \"bludgeoning\",\n  \"piercing\",\n  \"slashing\",\n] as const\n","import JSONCrush from \"jsoncrush\"\nimport { map, max, mergeDeepRight, reduce, prop } from \"rambda\"\nimport { sum, sump, mulp } from \"./utils.js\"\nimport { crc16 } from \"./crc.js\"\nimport * as tables from \"./tables.js\"\n\nexport type AbilityNames = keyof Abilities\n\nexport type Abilities = {\n  str: number\n  dex: number\n  con: number\n  int: number\n  wis: number\n  cha: number\n}\n\nexport type Weapon = {\n  die: string\n  damage_type: string\n}\n\nexport type Spell = string\nexport type Die = string\nexport type DamageType = typeof tables.damage_types[number]\n\nexport type Attack = {\n  id: string\n  name: string\n  description: string\n  die_num: number\n  die: Die\n  mod: number\n  type: DamageType\n}\n\nexport type Properties = { [key: string]: string[] }\n\nexport type StatBlock = {\n  uid: string\n\n  name: string\n  level: number\n  role: tables.Role\n  modifier: tables.Modifier\n  alignment: string\n  category: string\n  size: string\n\n  armor_class: number\n  hit_die: [number, string, number]\n  hit_points: number\n  attack_bonus: number\n  damage_per_action: number\n  spell_dc: number[]\n  initiative: number\n  perception: number\n  stealth: number\n  speed: number\n  experience: number\n  saving_throws: number[]\n  ability_modifiers: Abilities\n  challenge_rating: string\n\n  attacks: Attack[]\n  specials: string[]\n  properties: Properties\n}\n\ntype CreatureCompendium = {\n  _storageId: string\n  data: StatBlock[]\n  load(): void\n  filter(fn: (x: StatBlock) => boolean): StatBlock[]\n}\n\nfunction templateByLevel(lvl: Number) {\n  return tables.levels.filter((i) => lvl == i.level)[0]\n}\n\nfunction generateUuid(opts: Partial<StatBlock>): string {\n  let name = opts.name.toLowerCase()\n  let { level, role, modifier, size } = opts\n  return crc16(name + level + role + modifier + size)\n}\n\nexport function createCreature(opts: Partial<StatBlock>): StatBlock {\n  const role = tables.roles[opts.role]\n  const modifier = tables.modifiers[opts.modifier]\n  const template = templateByLevel(opts.level)\n\n  const saving_throws = template.saving_throws.map(\n    (s: number) => s + role.saving_throws + modifier.saving_throws)\n\n  let s = {\n    major: {\n      stat: saving_throws[0],\n      abilities: [role.stat_priorities[0], role.stat_priorities[1]],\n    },\n    minor: {\n      stat: saving_throws[1],\n      abilities: [role.stat_priorities[2], role.stat_priorities[3]],\n    },\n    lower: {\n      stat: saving_throws[2],\n      abilities: [role.stat_priorities[4], role.stat_priorities[5]],\n    },\n  }\n\n  const ability_modifiers: Abilities = {\n    str: 0,\n    dex: 0,\n    con: 0,\n    int: 0,\n    wis: 0,\n    cha: 0,\n  }\n  for (const key in template.ability_modifiers) {\n    ability_modifiers[role.stat_priorities[key]] =\n      template.ability_modifiers[key]\n  }\n\n  const hit_points = mulp(\"hit_points\", template, role, modifier)\n  const experience = mulp(\"experience\", template, modifier)\n  const challenge_rating = calculateChallengeRating({ experience })\n\n  return {\n    uid: generateUuid(opts),\n\n    name: opts.name,\n    level: template.level,\n    role: opts.role,\n    modifier: opts.modifier,\n    size: opts.size,\n    category: opts.category,\n    alignment: opts.alignment,\n\n    armor_class: sump(\"armor_class\", template, role, modifier),\n    hit_die: calculateHitDie({\n      size: opts.size,\n      level: opts.level,\n      ability_modifiers,\n      hit_points,\n    }),\n    hit_points,\n    attack_bonus: sump(\"attack_bonus\", template, role, modifier),\n    damage_per_action: mulp(\"damage_per_action\", template, role, modifier),\n    spell_dc: template.spell_dc\n      .map((spell_dc: number) => spell_dc + modifier.spell_dc),\n    initiative: sum(\n      template.proficiency_bonus,\n      role.initiative,\n      modifier.initiative,\n    ),\n    perception: sum(\n      template.proficiency_bonus,\n      role.perception,\n      modifier.perception,\n    ),\n    stealth: sum(0, modifier.stealth),\n    speed: sum(25, role.speed),\n    experience,\n    challenge_rating,\n    saving_throws,\n    ability_modifiers,\n\n    specials: opts.specials,\n    attacks: opts.attacks,\n    properties: opts.properties || {},\n  }\n}\n\nexport const CreatureCompendium: CreatureCompendium = {\n  _storageId: \"_creatureCompendium\",\n  data: [],\n\n  load() {\n    const data = JSON.parse(localStorage.get(this._storageId))\n    if (data) {\n      this.data = data\n    }\n  },\n\n  filter(fn) {\n    return this.data.filter(fn)\n  },\n}\n\n/**\n * From HP to die + constitution modifier estimates\n */\nfunction calculateHitDie(sb: Partial<StatBlock>): [number, string, number] {\n  let die = tables.HitDies[sb.size]\n  let estimate = tables.dies_avg[die]\n\n  let sway = Math.ceil((sb.hit_points / 100) * 15)\n  let result = 0\n  let dies = 0\n  while (result < (sb.hit_points - sway) && result < (sb.hit_points + sway)) {\n    dies += 1\n    result = estimate * dies\n  }\n\n  let base = dies > 0 ? sb.ability_modifiers.con * dies : 1\n\n  return [\n    dies,\n    die,\n    base,\n  ]\n}\n\nfunction calculateWeaponAttackDie(attacks: number, sb: StatBlock) {\n  const dmg = sb.damage_per_action\n  const modifier = reduce(max, 0, [\n    sb.ability_modifiers.str,\n    sb.ability_modifiers.dex,\n    sb.ability_modifiers.int,\n    sb.ability_modifiers.wis,\n    sb.ability_modifiers.cha,\n  ]) as number\n\n  let sway = Math.ceil(dmg / 100 * 15)\n\n  for (const d in tables.dies_avg) {\n    let avg = tables.dies_avg[d]\n    if (dmg - modifier + avg < sway) {}\n  }\n\n  return [\n  ]\n}\n\nfunction calculateChallengeRating(sb: Partial<StatBlock>): string {\n  let result = \"0\"\n  for (let cr of tables.cr_exp) {\n    if (sb.experience >= cr.exp) {\n      result = cr.cr\n    } else {\n      break\n    }\n  }\n\n  return result\n}\n\nexport function modToAbilityScore(mod: number): number {\n  return 10 + Math.floor(\n    mod * 2\n  )\n}\n\nexport function attackDamage(atk: Attack) {\n  const mediumDmg = tables.dies_avg[atk.die]\n  const maxDie = parseInt(atk.die.replace(/[^\\d]/, \"\"))\n\n  return {\n    min: atk.die_num + atk.mod,\n    avg: mediumDmg * atk.die_num + atk.mod,\n    max: maxDie * atk.die_num + atk.mod,\n  }\n}\n\nconst demo_creature: Partial<StatBlock> = {\n  name: \"Creature\",\n  level: 0,\n  role: \"soldier\",\n  modifier: \"normal\",\n  size: \"small\",\n  attacks: [],\n}\n\nexport const state = {\n  STORE_CURRENT_KEY: 'LMM_Current',\n  STORE_COMPENDIUM_KEY: 'LMM_Compendium',\n\n  list: {} as { [key: string]: StatBlock },\n  current: demo_creature as StatBlock,\n\n  init(creature?: Partial<StatBlock>) {\n    const data = creature ? creature : JSON.parse(localStorage.getItem(state.STORE_CURRENT_KEY))\n    if (!!data) {\n      state.current = data\n    }\n    state.update()\n  },\n  update() {\n    state.current = createCreature(state.current)\n    state.save()\n  },\n  save() {\n    localStorage.setItem(\"current\", JSON.stringify(state.current))\n  },\n\n  set(data: Partial<StatBlock>) {\n    state.current = mergeDeepRight(\n      state.current,\n      data\n    )\n    state.update()\n  },\n\n  loadCreatureCompendium() {\n    const data = JSON.parse(localStorage.getItem(state.STORE_COMPENDIUM_KEY))\n    state.list = data || {}\n  },\n\n  saveToCompendium(sb: StatBlock) {\n    state.list[sb.uid] = sb\n    state.saveCompendium()\n  },\n\n  deleteFromCompendium(uid: string) {\n    delete state.list[uid]\n    state.saveCompendium()\n  },\n\n  saveCompendium() {\n    localStorage.setItem(state.STORE_COMPENDIUM_KEY, JSON.stringify(state.list))\n  },\n\n  resetCompendium() {\n    localStorage.setItem(state.STORE_COMPENDIUM_KEY, \"{}\")\n  },\n\n  newAttack() {\n    const id = crc16(Math.random().toString())\n    state.current.attacks.push({\n      id,\n      name: \"\",\n      die_num: 1,\n      description: \"\",\n      die: \"d4\",\n      type: \"slashing\",\n      mod: 0,\n    })\n  },\n  removeAttack(attack: Partial<Attack>) {\n    const attacks = state.current.attacks\n      .filter((atk) => atk.id != attack.id)\n\n    state.set({ attacks })\n  },\n  setAttack(atk: Attack) {\n    const attacks = state.current.attacks\n      .map((k) => (k.id == atk.id) ? atk : k)\n\n    state.set({ attacks })\n  },\n\n}\n\nexport function encode(data: StatBlock): string {\n  const str = JSON.stringify(data)\n  return encodeURIComponent(JSONCrush.crush(str))\n}\n\nexport function decode(data: string) {\n  const str = JSONCrush.uncrush(decodeURIComponent(data))\n  return JSON.parse(str)\n}\n","import { dices } from \"./utils.js\"\n\n// Using:\n// https://songoftheblade.wordpress.com/2018/03/11/dd-5th-edition-monster-stats-on-a-business-card/\nexport function BusinessCardStats(l) {\n  let armour_class = 10 + Math.ceil(l / 2)\n  let health_points = dices.d8() * (l + 1)\n  let hit_dice = l + 1\n  let damage_per_round = 2 * l\n  let proficiency_bonus = 0\n  let saving_throws = {\n    bad: dices.d20() + Math.ceil(l / 2),\n    good: dices.d20() + Math.ceil(l / 2) + proficiency_bonus,\n  }\n  let difficulty_class = 10 + Math.ceil(l / 2) // as maximum\n\n  return {\n    armour_class,\n    health_points,\n    hit_dice,\n    damage_per_round,\n    proficiency_bonus,\n    saving_throws,\n    difficulty_class,\n  }\n}\n","import { createCreature } from \"./model.js\"\nimport { BusinessCardStats } from \"./business_card_creature.js\"\n\nconsole.log(\"giff:\", createCreature({\n  name: \"Sample\",\n  level: 5,\n  role: \"soldier\",\n  modifier: \"normal\",\n  size: \"medium\",\n  category: \"humanoid\",\n  alignment: \"neutral\",\n}))\nconsole.log(\"businesscard:\", BusinessCardStats(5))\nconsole.log()\n"],"names":["tables.levels","tables.roles","tables.modifiers","tables.HitDies","tables.dies_avg","tables.cr_exp"],"mappings":"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","x_google_ignoreList":[0]}